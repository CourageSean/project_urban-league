{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","shared/components/FormElements/Button.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/context/auth-context.js","user/pages/UserProfile.js","map/pages/Map.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","user/pages/GetStarted.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","user/pages/UpdateProfile.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","Button","href","size","inverse","danger","to","exact","type","onClick","disabled","UserItem","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","AuthContext","createContext","isLoggedIn","userId","token","login","logout","UserProfile","loadedUser","setLoadedUser","auth","useContext","useParams","console","log","fetchUser","img","about","socket","io","mapContainerStyle","options","zoomControl","rotateControl","center","lat","lng","Map","markers","setMarkers","selected","setSelected","setPlaces","selectedPlace","setSelectedPlace","origin","setOrigin","liveLocation","destination","setDestination","showDetails","setShowDetails","setResponse","connected","setIsConnected","setLastMessage","setTestMarkers","ownLocation","setOwnLocation","newMarker","setNewMarker","checkInTime","setCheckInTime","Arr","panTo","React","mapRef","setZoom","onMapLoad","setInterval","navigator","geolocation","getCurrentPosition","data","coords","latitude","longitude","setTimeout","position","JSON","parse","localStorage","userData","emit","getUsersLocation","axios","get","staticPlaces","coordinates","getPlaces","DirectionsServiceOption","travelMode","on","newUserOnMap","user_Id","uniqueMarker","Array","from","Set","find","off","checkIn","post","_id","zoom","onLoad","elt","index","icon","window","google","maps","Point","anchor","scaledSize","Size","labelOrigin","text","activeUsers","toString","color","fontWeight","fontSize","callback","status","directions","onCloseClick","title","address","destinations","cursor","description","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","NewPlace","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","Marker","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","stringify","Auth","favoriteSport","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","displayValue","undefined","prevMode","GetStarted","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","UpdateProfile","userUpdateSubmitHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","setItem","expiration","toISOString","removeItem","remainingTime","clearTimeout","storedData","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.035e8692.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n  return (\n    <div className='user-item'>\n      <Card className='user-item__content'>\n        <Link to={`/profile/${props.id}`}>\n          <div className='user-item__image'>\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className='user-item__info'>\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount}{' '}\n              {props.placeCount === 1 ? 'FAVORITE PLACE' : 'FAVORITE PLACES'}\n            </h3>\n          </div>\n        </Link>\n        <div className='user-item__details'>\n          <div></div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users`\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className='center'>\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport UsersList from '../components/UsersList';\nimport UserItem from '../components/UserItem';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport './UserProfile.css';\n\nconst UserProfile = () => {\n  const [loadedUser, setLoadedUser] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const userId = useParams().userId;\n  console.log(userId);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`\n        );\n        setLoadedUser(responseData);\n        console.log(responseData);\n      } catch (err) {}\n    };\n    fetchUser();\n  }, [sendRequest, userId]);\n\n  if (isLoading) {\n    return (\n      <div className='center'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedUser && !error) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>Could not find User!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className='profile-list'>\n      <li className='profile-item'>\n        <Card className='profile-item__content'>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className='profile-item__image'>\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${loadedUser.img}`}\n              alt={loadedUser.img}\n            />\n          </div>\n          <div className='profile-item__info'>\n            <h2>{loadedUser.name}</h2>\n            <p>{loadedUser.about}</p>\n          </div>\n\n          <div className='profile-item__actions'>\n            <Button to={`/${userId}/places`}>SHOW FAVORITE PLACES</Button>\n            {auth.userId === loadedUser.userId && (\n              <Button to={`/profile/edit/${loadedUser.userId}`}>EDIT</Button>\n            )}\n            {auth.userId === loadedUser.userId && (\n              <Button danger>DELETE</Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </ul>\n  );\n};\n\nexport default UserProfile;\n","import {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n  DirectionsService,\n  DirectionsRenderer,\n} from '@react-google-maps/api';\nimport Location from './Location.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\n// import mapStyles from '../components/mapStyles';\nimport io from 'socket.io-client';\nimport UsersList from '../components/UsersList';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n// const testArray = [\n//   { liveLocation: { lat: 50.915165747607714, lng: 6.10337325822752 } },\n//   { liveLocation: { lat: 50.917165747607714, lng: 6.18337325822752 } },\n//   { liveLocation: { lat: 50.93089720514569, lng: 6.104956327075176 } },\n//   { liveLocation: { lat: 50.915165747607714, lng: 6.10777325822752 } },\n// ];\n\nconst socket = io('https://urban-league.herokuapp.com/');\n//needed variables\n\nconst libraries = ['places'];\nconst mapContainerStyle = {\n  height: '85vh',\n  width: '90vw',\n};\nconst options = {\n  // styles: mapStyles,\n  // disableDefaultUI: true,\n  zoomControl: true,\n  rotateControl: true,\n};\nconst center = {\n  lat: 51.24321,\n  lng: 6.78724,\n};\n\nconst Map = () => {\n  const Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show\n      ? 'modal display-block'\n      : 'modal display-none';\n\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n          <button onClick={handleClose}>Close</button>\n        </section>\n      </div>\n    );\n  };\n\n  const { error, sendRequest, clearError } = useHttpClient();\n  const [isLoading, setIsLoading] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [places, setPlaces] = useState(null);\n  const [singlePlace, setSinglePlace] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [shortInfo, setShortInfo] = useState(null);\n  const [origin, setOrigin] = useState(null);\n  const [testArray, setTestArray] = useState([\n    { liveLocation: { lat: 50.915165747607714, lng: 6.10337325822752 } },\n    { liveLocation: { lat: 50.917165747607714, lng: 6.18337325822752 } },\n    { liveLocation: { lat: 50.93089720514569, lng: 6.104956327075176 } },\n    { liveLocation: { lat: 50.915165747607714, lng: 6.10777325822752 } },\n  ]);\n  const [destination, setDestination] = useState(null);\n  const [showDetails, setShowDetails] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [testMarkers, setTestMarkers] = useState([]);\n  const [ownLocation, setOwnLocation] = useState(null);\n  const [newMarker, setNewMarker] = useState([]);\n  const [checkInTime, setCheckInTime] = useState('');\n  const Arr = [];\n  // User Posiotion State\n  const [user_1Position, setUser_1Position] = useState();\n  // On Mapload\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n  }, []);\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n    const paaan = () => {\n      // envoke watchownposition\n      watchOwnPosition();\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          panTo({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        () => null\n      );\n    };\n    paaan();\n\n    const getUsersLocation = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `${process.env.REACT_APP_BACKEND_URL}/users`\n        );\n        setMarkers(data.users);\n        setLoadedUsers(data);\n        setIsLoading(false);\n        console.log(data.users);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const getPlaces = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `${process.env.REACT_APP_BACKEND_URL}/places/staticplaces`\n        );\n        setPlaces(data.staticPlaces);\n\n        console.log(data, 'places');\n        console.log(data.staticPlaces[0].coordinates.lat);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getPlaces();\n    //=========================\n    // useEffect(() => {\n    //   const fetchUsers = async () => {\n    //     try {\n    //       const responseData = await sendRequest(\n    //         'http://localhost:5000/api/users'\n    //       );\n\n    //       setLoadedUsers(responseData.users);\n    //       console.log(responseData);\n    //     } catch (err) {}\n    //   };\n    //   fetchUsers();\n    // }, [sendRequest]);\n    getUsersLocation();\n    // getPlaces();\n  }, []);\n  //direction callback\n  const directionsCallback = (response) => {\n    // console.log(response);\n    setResponse(response);\n    if (response) {\n      if (response.status === 'OK') {\n        setResponse(response);\n      } else {\n        // console.log('response: ', response);\n      }\n    }\n  };\n\n  // Directionoptions\n  const DirectionsServiceOption = {\n    destination: destination,\n    origin: origin,\n    travelMode: 'WALKING',\n  };\n  // calculate route\n  const calculateRoute = (destinations) => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setOrigin({\n          lat: 51.24321,\n          lng: 6.78724,\n        });\n        setDestination(destinations);\n        // console.log(\n        //   'from:',\n        //   {\n        //     lat: position.coords.latitude,\n        //     lng: position.coords.longitude,\n        //   },\n        //   'to:',\n        //   destinations\n        // );\n      },\n      () => {\n        // setOrigin(null);\n        // setDestination(null);\n        // setSelected(null);\n        // setResponse(null);\n      }\n    );\n  };\n\n  useEffect(() => {\n    setResponse(null);\n  }, [origin]);\n\n  // =============Socket. Io\n  useEffect(() => {\n    console.log(JSON.parse(localStorage.userData).userId, 'User ID');\n    socket.on('connection', () => {\n      setIsConnected(true);\n    });\n    socket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    socket.on('position_room', (data) => {\n      setLastMessage(data);\n      const newUserOnMap = {\n        lat: data[0],\n        lng: data[1],\n        userId: data[2],\n      };\n      const user_Id = data[2];\n      console.log(user_Id, 'userID');\n      // const checkArray = [...testMarkers];\n      // checkArray.filter((elt) => {\n      //   return elt.userId !== user_Id;\n      // });\n      const newAdd = Arr.push(newUserOnMap);\n      // console.log(Arr, 'newAdd');\n      setTestMarkers(Arr);\n\n      const uniqueMarker = Array.from(new Set(Arr.map((a) => a.userId))).map(\n        (id) => {\n          return Arr.find((a) => a.userId === id);\n        }\n      );\n\n      setNewMarker(uniqueMarker);\n      // setNewMarker(testTest);\n      // console.log(uniqueMarker, 'uniqueMarker');\n    });\n    return () => {\n      socket.off('connection');\n      socket.off('disconnect');\n      socket.off('position_room');\n    };\n  }, []);\n  const sendMessage = (position) => {\n    socket.emit('position_room', position);\n  };\n\n  // Watch User Position\n  // const watchUserPosition = () => {\n  //   setInterval(() => {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (data) => {\n  //         setTimeout(() => {\n  //           // setUser_1Position(data.coords.latitude, data.coords.longitude);\n  //           sendMessage([data.coords.latitude, data.coords.longitude]);\n  //           // console.log(data.coords.latitude, data.coords.longitude);\n  //         }, 10000);\n  //       },\n  //       (error) => console.log(error)\n  //     );\n  //   }, 20000);\n  // };\n\n  // Get Details\n  const getSinglePlace = async () => {\n    try {\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_BACKEND_URL}/places/609fa79b54e4b187699b9403`\n      );\n\n      console.log(data, 'single place');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Watch Own Position\n  function watchOwnPosition() {\n    setInterval(() => {\n      navigator.geolocation.getCurrentPosition(\n        (data) => {\n          setOwnLocation([data.coords.latitude, data.coords.longitude]);\n          // console.log(data, 'own position');\n          setTimeout(() => {\n            setOwnLocation([data.coords.latitude, data.coords.longitude]);\n            sendMessage([\n              data.coords.latitude,\n              data.coords.longitude,\n              JSON.parse(localStorage.userData).userId,\n            ]);\n          }, 5000);\n        },\n        (error) => console.log(error)\n      );\n    }, 10000);\n  }\n\n  // Check In\n  const checkIn = async () => {\n    console.log(checkInTime);\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_BACKEND_URL}/places/staticplaces/${\n          selected._id\n        }/?userId=${\n          JSON.parse(localStorage.userData).userId\n        }&time=${checkInTime}`\n      );\n      // window.location.href = 'http://localhost:3000';\n      console.log(selected._id, 'selected place id');\n      // console.log(data, 'single place checkin sent');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className='center'>\n          <LoadingSpinner />\n        </div>\n      )}\n      {isLoading === false}\n      <div className='map-container'>\n        {/* <Search panTo={panTo} /> */}\n\n        {markers && (\n          <GoogleMap\n            id='map'\n            mapContainerStyle={mapContainerStyle}\n            zoom={13}\n            center={center}\n            options={options}\n            // onClick={onMapClick}\n            onLoad={onMapLoad}\n            // tilt={45}\n          >\n            {/* {loadedUsers &&\n              markers.map((marker, index) => (\n                <div className='marker-wrapper'>\n                  <h1 className='haha'>jo</h1>\n                  {loadedUsers && (\n                    <Marker\n                      key={index}\n                      position={{\n                        lat: marker.liveLocation.lat,\n                        lng: marker.liveLocation.lng,\n                      }}\n                      // animation={{ Animation: BOUNCE }}\n                      onClick={() => {\n                        setShortInfo(marker);\n                        setSelected(marker);\n                        console.log(marker);\n                      }}\n                      // icon={{\n                      //   url: `asd`,\n                      //   origin: new window.google.maps.Point(0, 0),\n                      //   anchor: new window.google.maps.Point(15, 15),\n                      //   scaledSize: new window.google.maps.Size(50, 50),\n                      //   label: 'hallo',\n                      //   title: 'jau',\n                      // }}\n                    />\n                  )}\n                </div>\n              ))} */}\n            {places &&\n              places.map((elt, index) => (\n                <div className='marker-wrapper'>\n                  {/* {console.log(elt, 'here')} */}\n                  <Marker\n                    key={index}\n                    position={{\n                      lat: elt.coordinates.lat,\n                      lng: elt.coordinates.lng,\n                    }}\n                    // animation={{ Animation: BOUNCE }}\n                    onClick={() => {\n                      //   setShortInfo(marker);\n                      setSelected(elt);\n                      setSelectedPlace('More info about place');\n                      // console.log(elt);\n                    }}\n                    icon={{\n                      url: `/place-marker.png`,\n                      origin: new window.google.maps.Point(0, 0),\n                      anchor: new window.google.maps.Point(15, 15),\n                      scaledSize: new window.google.maps.Size(50, 50),\n                      labelOrigin: new window.google.maps.Point(33, 0),\n                    }}\n                    label={{\n                      text: elt.activeUsers.length.toString(),\n                      color: 'black',\n                      fontWeight: 'bold',\n                      fontSize: '20px',\n                    }}\n                  />\n                </div>\n              ))}\n            {newMarker.length > 0 &&\n              newMarker.map((newMarker, index) => (\n                <div className='marker-wrapper'>\n                  <Marker\n                    key={index}\n                    position={{\n                      lat: newMarker.lat,\n                      lng: newMarker.lng,\n                    }}\n                    label={{\n                      text: loadedUsers.users.find(\n                        (elt) => newMarker.userId === elt._id\n                      ).name,\n                      color: 'crimson',\n                      fontWeight: 'bold',\n                      fontSize: '22px',\n                    }}\n                    icon={{\n                      url: '/dummi.png',\n                      anchor: new window.google.maps.Point(53, 53),\n                      labelOrigin: new window.google.maps.Point(33, -10),\n                      scaledSize: new window.google.maps.Size(50, 50),\n                      origin: new window.google.maps.Point(0, 0),\n                    }}\n                  />\n                </div>\n              ))}\n\n            {ownLocation && (\n              <Marker\n                position={{\n                  lat: ownLocation[0],\n                  lng: ownLocation[1],\n                }}\n                icon={{\n                  url: `/blue-dot.png`,\n                  origin: new window.google.maps.Point(0, 0),\n                  anchor: new window.google.maps.Point(15, 15),\n                  scaledSize: new window.google.maps.Size(50, 50),\n                }}\n              ></Marker>\n            )}\n            {!response && (\n              <DirectionsService\n                options={DirectionsServiceOption}\n                callback={directionsCallback}\n              />\n            )}\n            {response && (\n              <DirectionsRenderer\n                options={{\n                  directions: response,\n                }}\n              />\n            )}\n\n            {selected ? (\n              <InfoWindow\n                position={{\n                  lat: selected.coordinates.lat,\n                  lng: selected.coordinates.lng,\n                }}\n                onCloseClick={() => {\n                  setSelected(null);\n                  setSelectedPlace(null);\n                  setShowDetails(false);\n                }}\n              >\n                <div>\n                  {selected && !selectedPlace && <h2>Text</h2>}\n                  {selectedPlace && <h2>{selected.title}</h2>}\n                  {selectedPlace && <h4>Rate 3.5/5</h4>}\n                  {selectedPlace && <h4>{selected.address}</h4>}\n\n                  {selectedPlace && (\n                    <button\n                      onClick={() => {\n                        setShowDetails(true);\n\n                        console.log(selected);\n                      }}\n                    >\n                      More Info & Check In\n                    </button>\n                  )}\n                  <button\n                    onClick={() => {\n                      calculateRoute({\n                        lat: selected.coordinates.lat,\n                        lng: selected.coordinates.lng,\n                      });\n                    }}\n                  >\n                    {' '}\n                    Navigate\n                  </button>\n                </div>\n              </InfoWindow>\n            ) : null}\n          </GoogleMap>\n        )}\n      </div>\n\n      {selected && showDetails && (\n        /***************************************************/\n        <>\n          <div className='location-info'>\n            <h1\n              style={{ color: 'white', cursor: 'pointer' }}\n              onClick={() => {\n                setShowDetails(false);\n              }}\n            >\n              X\n            </h1>\n            <img src={selected.image} alt='' />\n            <h2>{selected.title}</h2>\n            <h3>{selected.address}</h3>\n            <h4>{selected.activeUsers.length} Users Checked In </h4>\n            {selected.activeUsers.map((elt) => {\n              return (\n                <div>\n                  {loadedUsers.users.find((user) => elt === user._id).name}\n                  <h4>{elt}</h4>\n                </div>\n              );\n            })}\n            <h4>{selected.description}</h4>\n            <h4>possible sports </h4>\n            <div className='btn-wrapper'>\n              <button className='route-btn'>Route</button>\n              <button className='checkin-btn'>Check In</button>\n            </div>\n            <div>\n              <h1>Checking In</h1>\n              <label htmlFor='time' name=''>\n                30min\n              </label>\n              <input\n                type='radio'\n                name='time'\n                id='thirty'\n                onChange={() => {\n                  setCheckInTime(60000);\n                }}\n              />\n              <label htmlFor='time'>60min</label>\n              <input\n                type='radio'\n                name='time'\n                id='sixty'\n                onChange={() => {\n                  setCheckInTime(120000);\n                }}\n              />\n              <br />\n              <button onClick={checkIn}>check in</button>\n            </div>\n          </div>\n        </>\n\n        /***************************************************/\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Map;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/places',\n        'POST',\n        formData,\n        {\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className='place-form' onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id='title'\n          element='input'\n          type='text'\n          label='Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid title.'\n          onInput={inputHandler}\n        />\n        <Input\n          id='description'\n          element='textarea'\n          label='Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description (at least 5 characters).'\n          onInput={inputHandler}\n        />\n        <Input\n          id='address'\n          element='input'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address.'\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id='image'\n          onInput={inputHandler}\n          errorText='Please provide an image.'\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass='place-item__modal-content'\n        footerClass='place-item__modal-actions'\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className='map-container'>\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header='Are you sure?'\n        footerClass='place-item__modal-actions'\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className='place-item'>\n        <Card className='place-item__content'>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className='place-item__image'>\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className='place-item__info'>\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className='place-item__actions'>\n            <Button inverse onClick={openMapHandler}>\n              SHOW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className='center'>\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className='center'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id='title'\n            element='input'\n            type='text'\n            label='Title'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid title.'\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id='description'\n            element='textarea'\n            label='Description'\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText='Please enter a valid description (min. 5 characters).'\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from 'react';\n\nimport { Multiselect } from \"multiselect-react-dropdown\";\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n\n  const data = [\n    {favoriteSport: 'Soccer', id: 1},\n    {favoriteSport: 'Basketball', id: 2},\n    {favoriteSport: 'Table Tennis', id: 3},\n    {favoriteSport: 'Field Hockey', id: 4},\n    {favoriteSport: 'Volleyball', id: 5}\n  ]\n\n  const [options] = useState(data);\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          about: undefined,\n          favoriteSport: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n\n          about: {\n            value: '',\n            isValid: false\n          },\n\n          favoriteSport: {\n            value: '',\n            isValid: true\n          },\n\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('about', formState.inputs.about.value);\n        formData.append('favoriteSport', formState.inputs.favoriteSport.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className='authentication'>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          {!isLoginMode && (\n            <Input\n              element='input'\n              id='name'\n              type='text'\n              label='Your Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Please enter a name.'\n              onInput={inputHandler}\n            />\n          )}\n           {!isLoginMode && (\n            <Input\n              element=\"textarea\"\n              id=\"about\"\n              type=\"textarea\"\n              label=\"About\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a short description.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <>\n              <span className=\"custom-span-multiselect\">Favorite sports</span>\n              <Multiselect\n                placeholder=\"Select any\"\n                id=\"favoriteSport\"\n                options={options}\n                displayValue=\"favoriteSport\"\n              />\n            </>\n          )}\n\n          <Input\n            element='input'\n            id='email'\n            type='email'\n            label='E-Mail'\n            validators={[VALIDATOR_EMAIL()]}\n            errorText='Please enter a valid email address.'\n            onInput={inputHandler}\n          />\n          <Input\n            element='input'\n            id='password'\n            type='password'\n            label='Password'\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText='Please enter a valid password, at least 6 characters.'\n            onInput={inputHandler}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nimport './Auth.css';\n\nconst GetStarted = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  return (\n    <React.Fragment>\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h1>Find the best spot in the city.</h1>\n        <div className=\"\">\n          <Button to={`/auth`}>GET STARTED</Button>\n        </div>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default GetStarted;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/livemap\">LIVEMAP</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/profile/${auth.userId}`}>PROFILE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD FAVORITE PLACE</NavLink>\n        </li>\n      )}\n       {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY FAVORITE PLACES</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">GET STARTED</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">URBAN LEAGUE</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../../places/pages/PlaceForm.css';\n\nconst UpdateProfile = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUser, setLoadedUser] = useState();\n  const userId = useParams().userId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false,\n      },\n      about: {\n        value: '',\n        isValid: false,\n      },\n      \n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`\n        );\n        setLoadedUser(responseData);\n        console.log(responseData);\n        setFormData(\n          {\n            name: {\n              value: responseData.name,\n              isValid: true,\n            },\n            about: {\n              value: responseData.about,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchUser();\n  }, [sendRequest, userId, setFormData]);\n\n  const userUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`,\n        'PATCH',\n        JSON.stringify({\n          name: formState.inputs.name.value,\n          about: formState.inputs.about.value,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/users/profile/' + auth.userId);\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className='center'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedUser && !error) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>Could not find Profile!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedUser && (\n        <form className='place-form' onSubmit={userUpdateSubmitHandler}>\n          <Input\n            id='name'\n            element='input'\n            type='text'\n            label='Name'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid name.'\n            onInput={inputHandler}\n            initialValue={loadedUser.name}\n            initialValid={true}\n          />\n           <Input\n            id='about'\n            element='textarea'\n            label='About'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a short info.'\n            onInput={inputHandler}\n            initialValue={loadedUser.about}\n            initialValid={true}\n          />\n\n          <Button type='submit' disabled={!formState.isValid}>\n            UPDATE PROFILE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport UserProfile from './user/pages/UserProfile';\nimport Map from './map/pages/Map';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport GetStarted from './user/pages/GetStarted';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport UpdateProfile from './user/pages/UpdateProfile';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/profile/:userId' exact>\n          <UserProfile />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/profile/edit/:userId' exact>\n          <UpdateProfile />\n        </Route>\n        <Route path='/livemap' exact>\n          <h1>livemap</h1>\n          <Map />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId'>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <GetStarted />\n        </Route>\n        <Route path='/auth'>\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}